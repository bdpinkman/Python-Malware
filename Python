#!/usr/bin/python
# -*- coding: UTF-8 -*-


#1) MODULOS UTILIZADOS
#2) DIVIDIMOS EL SCRIPT EN FUNCIÓN DE SUS SISTEMAS OPERATIVOS
#       SYSTEM          PLATFORM VALUE
#       Linux           'linux'
#       Windows         'win32'
#       Windows/Cygwin  'cygwin'
#       Mac OS X        'darwin'
#3) NAVEGAR POR EL SISTEMA:
#       os.chdir(path)                                  CD
#       os.getcwd()                                     PWD
#       os.listdir(path)                                LS
#       os.mkdir(path,mode=0o777,*,dir_fd=None)         MKDIR
#       os.makedirs(name,mode=0o777,exist_ok=False)     MKDIR RECURSIVO
#       os.remove(path,*,dir_fd=None)                   RM ARCHIVOS
#       os.rmdir(path,*,dir_fd=None)                    RM DIRECTORIOS ¡VACIOS!
#       shutil.rmtree(path,ignore_errors=False,onerror=None) RM DIRECTORIOS, SI IGNORE_ERROS = TRUE, IGNORA ERRORES
#       os.renames(old, new)                            RENAME
#       os.kill(pid, sig)                               KILL
#       os.system(command)                              EJECUTA UN COMANDO EN UNA SHELL SECUNDARIA
#       os.popen(cmd, mode='r', buffering=-1)           CREA UN ARCHIVO Y/O LO MODIFICA
#               Character       Meaning
#               'r'             open for reading (default)
#               'w'             open for writing, truncating the file first
#               'x'             open for exclusive creation, failing if the file already exists
#               'a'             open for writing, appending to the end of the file if it exists
#               'b'             binary mode
#               't'             text mode (default)
#               '+'             open a disk file for updating (reading and writing)
#               'U'             universal newlines mode (deprecated)







#######################################################################################################################################################
#MODULOS UTILIZADOS
#######################################################################################################################################################
import os       #SISTEMA OPERATIVO
import sys
import platform
#######################################################################################################################################################





#######################################################################################################################################################
#DIVIDIMOS EN FUNCIÓN DEL SISTEMA OPERATIVO
#######################################################################################################################################################

if sys.platform.startswith('win32') or sys.platform.startswith('cygwin'):
        #########
        #WINDOWS#
        #########
        print 'Hola windows'
		
        SO = platform.uname() # ('Windows', 'GO100011', '10', '10.0.10586', 'AMD64', 'Intel64 Family 6 Model 78 Stepping 3, GenuineIntel') 
        SO2 = sys.getwindowsversion() #sys.getwindowsversion(major=6, minor=2, build=9200, platform=2, service_pack='')
		print SO
        print SO2


elif sys.platform.startswith('linux'):
		#######
        #LINUX#
        #######
        print 'Hola linux'
		
        SO = os.uname() # ('Linux', 'jorge-VirtualBox', '4.4.0-53-generic', '#74-Ubuntu SMP Fri Dec 2 15:58:04 UTC 2016', 'i686', 'i686')
        SO2 = platform.linux_distribution() # ('LinuxMint', '18.1', 'serena')
		print SO
        print SO2

		
#TODAVÍA POR INVESTIGAR
		if os.geteuid() == 0:		#SABER SI ES ROOT
		#MIRAR A VER QUÉ HACE GETPASS -> import getpass
			print 'Run as Root' 
